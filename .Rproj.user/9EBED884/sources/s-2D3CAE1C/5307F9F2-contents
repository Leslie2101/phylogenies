
GeomTriangle <- ggproto("GeomTriangle", Geom,
                        required_aes = c("x", "y"),
                        default_aes = aes(colour = NA, fill = "grey20", size = 0.5, 
                                          linetype = 1, alpha = 1, 
                                          height = 1, width = 1),
                        
                        extra_params = c("na.rm", "right_side"),
                        draw_key = draw_key_polygon,
                        
                        draw_panel = function(data, panel_params, coord, right_side = T) {
                          
  
                          data2 <- data
                          data2$x[1] <- data2$y[1] <- 0
                          coords <- coord$transform(data, panel_params)
                          make_triangle_y <- function(y, height) {

                            c(y, y + height, y+height)
                          }
                          make_triangle_x <- function(x, width, right_side){
                            if(!right_side) width <- -width
                            return(c(x, x + width, x))
                          }
                          
                          my_tree <- grid::gTree()
                          
                          for(i in seq(nrow(coords))){
                            width <- coords$width[i]
                            height <- coords$height[i]
                            wid <- width / 10
                            hei <- height / 10
                            my_tree <- grid::addGrob(my_tree, grid::polygonGrob(
                              make_triangle_x(coords$x[i], wid, right_side),
                              make_triangle_y(coords$y[i], hei),
                              default.units = "native",
                              gp = grid::gpar(
                                col = coords$colour[i],
                                fill = scales::alpha(coords$fill[i], coords$alpha[i]),
                                lwd = coords$size[i] * .pt,
                                lty = coords$linetype[i]))) }
                          my_tree}
)


library(tidyverse)

geom_htriangle <- function(mapping = NULL, data = NULL, stat = "identity",
                          position = "identity", na.rm = FALSE, show.legend = NA,
                          inherit.aes = TRUE, right_side = T,
                           ...) 
{
  layer(geom = GeomTriangle, mapping = mapping, data = data, stat = stat,
        position = position, show.legend = show.legend, inherit.aes = inherit.aes,
        params = list(na.rm = na.rm, right_side = right_side,...))
}

test <- tibble(y = c(10, 20, 30), n = c(300, 100, 200), transparency = c(10, 2, 4)) %>%
  ggplot() +
  geom_linerange(aes(xmin = 0, xmax= n, y=y)) +
  geom_htriangle(aes(x = n, y = y, alpha = transparency, fill = as.factor(n),
                     width = transparency/10,
                     height = 1),
                 colour = "black",
                 
                 right_side = F) +
  scale_y_continuous(limits = c(5, 35)) +
  scale_x_continuous(limits = c(0, 350))

